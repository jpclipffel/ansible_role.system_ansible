# code: language=Ansible insertSpaces=true tabSize=2


- name: Reset public keys
  block:

    - name: Get Ansible user account path
      shell: |
        getent passwd {{ system_ansible_user_name }} | awk -F: '{ print $6 }'
      register: _saun
      changed_when: false

    - name: Backup authorized keys file
      copy:
        src: "{{ _saun.stdout }}/.ssh/authorized_keys"
        dest: "{{ _saun.stdout }}/.ssh/authorized_keys.bak"
        remote_src: true
        mode: 0644
      when:
        - "_saun.stdout | length > 0"

    - name: Void authorized keys file
      shell: |
        echo -n > "{{ _saun.stdout }}/.ssh/authorized_keys"
      when:
        - "_saun.stdout | length > 0"

  rescue:
    - name: Reset authorized keys file
      copy:
        src: "{{ _saun.stdout }}/.ssh/authorized_keys.bak"
        dest: "{{ _saun.stdout }}/.ssh/authorized_keys"
        remote_src: true
        mode: 0644

  tags: [never, setup, teardown, remove]

# ---

- name: Install Ansible user public key (from file)
  ansible.posix.authorized_key:
    user: "{{ system_ansible_user_name }}"
    key: "{{ lookup('file', system_ansible_public_key_file) }}"
    state: present
  when:
    - system_ansible_public_key_file is defined and system_ansible_public_key_file | length > 0
  tags: [never, setup]

- name: Install Ansible user public key (from variable)
  ansible.posix.authorized_key:
    user: "{{ system_ansible_user_name }}"
    key: "{{ system_ansible_public_key }}"
    state: present
  when:
    - system_ansible_public_key is defined and system_ansible_public_key | length > 0
  tags: [never, setup]

- name: Install Ansible user rescue public key
  ansible.posix.authorized_key:
    user: "{{ system_ansible_user_name }}"
    key: "{{ system_ansible_public_key_rescue }}"
    state: present
  when:
    - system_ansible_public_key_rescue is defined and system_ansible_public_key_rescue | length > 0
  ignore_errors: true
  tags: [never, setup, skip_ansible_lint]

- name: Create Ansible user public keys temporary directory (for GitLab)
  tempfile:
    state: directory
  register: _keysdir
  delegate_to: localhost
  tags: [never, setup]

- name: Download Ansible user public keys (from GitLab)
  get_url:
    url: "{{ _sapkg_item.0.url }}/{{ _sapkg_item.1 }}.keys"
    dest: "{{ _keysdir.path }}/{{ _sapkg_item.1 }}.keys"
    validate_certs: false
  when:
    - system_ansible_public_keys_git is defined and system_ansible_public_keys_git | length > 0
  loop: "{{ system_ansible_public_keys_git | subelements('users') }}"
  loop_control:
    loop_var: _sapkg_item
  ignore_errors: true
  delegate_to: localhost
  tags: [never, setup, skip_ansible_lint]

- name: Install Ansible user public key (from GitLab)
  ansible.posix.authorized_key:
    user: "{{ system_ansible_user_name }}"
    key: "{{ lookup('file', _keysdir.path + '/' + _sapkg_item.1 + '.keys') }}"
  when:
    - system_ansible_public_keys_git is defined and system_ansible_public_keys_git | length > 0
  loop: "{{ system_ansible_public_keys_git | subelements('users') }}"
  loop_control:
    loop_var: _sapkg_item
  ignore_errors: true
  tags: [never, setup, skip_ansible_lint]

# ---

- name: Remove Ansible user public key (from file)
  ansible.posix.authorized_key:
    user: "{{ system_ansible_user_name }}"
    key: "{{ lookup('file', system_ansible_public_key_file) }}"
    state: absent
  when:
    - system_ansible_public_key_file is defined and system_ansible_public_key_file | length > 0
  tags: [never, teardown, remove]

- name: Remove Ansible user public key (from variable)
  ansible.posix.authorized_key:
    user: "{{ system_ansible_user_name }}"
    key: "{{ system_ansible_public_key }}"
    state: absent
  when:
    - system_ansible_public_key is defined and system_ansible_public_key | length > 0
  tags: [never, teardown, remove]
